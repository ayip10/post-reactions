/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_HW6SERVER_H_
#define JSONRPC_CPP_STUB_HW6SERVER_H_

#include <jsonrpccpp/server.h>

class hw6Server : public jsonrpc::AbstractServer<hw6Server>
{
    public:
        hw6Server(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<hw6Server>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("update", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "updating_json",jsonrpc::JSON_STRING, NULL), &hw6Server::updateI);
            this->bindAndAddMethod(jsonrpc::Procedure("search", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "search_clause",jsonrpc::JSON_STRING, NULL), &hw6Server::searchI);
        }

        inline virtual void updateI(const Json::Value &request, Json::Value &response)
        {
            response = this->update(request["updating_json"].asString());
        }
        inline virtual void searchI(const Json::Value &request, Json::Value &response)
        {
            response = this->search(request["search_clause"].asString());
        }
        virtual Json::Value update(const std::string& updating_json) = 0;
        virtual Json::Value search(const std::string& search_clause) = 0;
};

#endif //JSONRPC_CPP_STUB_HW6SERVER_H_
